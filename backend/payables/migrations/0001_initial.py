# Generated by Django 5.2.7 on 2025-10-12 02:39

import core.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('registrations', '0001_initial'),
        ('tenant', '0002_alter_tenant_logo'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountPayable',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Deletado em')),
                ('description', models.CharField(max_length=200, verbose_name='Descrição')),
                ('original_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Valor Original')),
                ('discount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Desconto')),
                ('interest', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Juros')),
                ('fine', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Multa')),
                ('paid_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Valor Pago')),
                ('issue_date', models.DateField(default=django.utils.timezone.now, verbose_name='Data de Emissão')),
                ('due_date', models.DateField(verbose_name='Data de Vencimento')),
                ('payment_date', models.DateField(blank=True, null=True, verbose_name='Data de Pagamento')),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('due', 'À Vencer'), ('overdue', 'Vencida'), ('paid', 'Paga'), ('partially_paid', 'Paga Parcialmente'), ('cancelled', 'Cancelada')], default='due', max_length=20, verbose_name='Status')),
                ('is_recurring', models.BooleanField(default=False, verbose_name='É Recorrente?')),
                ('recurrence_frequency', models.CharField(blank=True, choices=[('weekly', 'Semanal'), ('biweekly', 'Quinzenal'), ('monthly', 'Mensal'), ('bimonthly', 'Bimestral'), ('quarterly', 'Trimestral'), ('semiannual', 'Semestral'), ('annual', 'Anual')], max_length=20, null=True, verbose_name='Frequência de Recorrência')),
                ('invoice_numbers', models.CharField(blank=True, help_text='Ex: 123, 456, 789', max_length=200, validators=[django.core.validators.RegexValidator(message='Notas fiscais devem conter apenas números, vírgulas e espaços', regex='^[\\d,\\s]*$')], verbose_name='Notas Fiscais')),
                ('bank_slip_number', models.CharField(blank=True, help_text='Somente números', max_length=100, validators=[django.core.validators.RegexValidator(message='Número do boleto deve conter apenas números', regex='^\\d*$')], verbose_name='Número do Boleto')),
                ('notes', models.TextField(blank=True, verbose_name='Observações')),
                ('branch', models.ForeignKey(help_text='Filial responsável por esta conta', on_delete=django.db.models.deletion.PROTECT, related_name='accounts_payable', to='registrations.filial', verbose_name='Filial')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='accounts_payable', to='registrations.category', verbose_name='Categoria')),
                ('deleted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_deleted', to=settings.AUTH_USER_MODEL)),
                ('payment_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='accounts_payable', to='registrations.paymentmethod', verbose_name='Forma de Pagamento')),
                ('recurring_parent', models.ForeignKey(blank=True, help_text='Referência à conta original que gerou esta recorrência', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recurring_children', to='payables.accountpayable', verbose_name='Conta Recorrente Pai')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='accounts_payable', to='registrations.supplier', verbose_name='Fornecedor')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related', to='tenant.tenant', verbose_name='Empresa')),
            ],
            options={
                'verbose_name': 'Conta a Pagar',
                'verbose_name_plural': 'Contas a Pagar',
                'ordering': ['-due_date', '-created_at'],
            },
            bases=(core.models.UppercaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PayablePayment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('payment_date', models.DateField(default=django.utils.timezone.now, verbose_name='Data do Pagamento')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Valor Pago')),
                ('notes', models.TextField(blank=True, verbose_name='Observações')),
                ('bank_account', models.CharField(blank=True, max_length=100, verbose_name='Conta Bancária')),
                ('transaction_number', models.CharField(blank=True, max_length=100, verbose_name='Número da Transação')),
                ('account_payable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='payables.accountpayable', verbose_name='Conta a Pagar')),
                ('payment_method', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='payable_payments', to='registrations.paymentmethod', verbose_name='Forma de Pagamento')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_related', to='tenant.tenant', verbose_name='Empresa')),
            ],
            options={
                'verbose_name': 'Pagamento de Conta',
                'verbose_name_plural': 'Pagamentos de Contas',
                'ordering': ['-payment_date', '-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='accountpayable',
            index=models.Index(fields=['tenant', 'branch', 'status'], name='payables_ac_tenant__430860_idx'),
        ),
        migrations.AddIndex(
            model_name='accountpayable',
            index=models.Index(fields=['tenant', 'branch', 'due_date'], name='payables_ac_tenant__5b117a_idx'),
        ),
        migrations.AddIndex(
            model_name='accountpayable',
            index=models.Index(fields=['tenant', 'branch', 'supplier'], name='payables_ac_tenant__c4faa3_idx'),
        ),
        migrations.AddIndex(
            model_name='accountpayable',
            index=models.Index(fields=['tenant', 'status', 'due_date'], name='payables_ac_tenant__65fd07_idx'),
        ),
        migrations.AddIndex(
            model_name='payablepayment',
            index=models.Index(fields=['tenant', 'account_payable'], name='payables_pa_tenant__0b658b_idx'),
        ),
        migrations.AddIndex(
            model_name='payablepayment',
            index=models.Index(fields=['tenant', 'payment_date'], name='payables_pa_tenant__8a5abf_idx'),
        ),
    ]
